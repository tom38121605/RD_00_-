<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [flexspi_nor_release\sai_interrupt_record_playback.out]</title></head>
<body><HR>
<H1>Static Call Graph for image flexspi_nor_release\sai_interrupt_record_playback.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Tue Nov 29 10:51:16 2022
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[bf]">LPUART_WriteBlocking</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bf]">LPUART_WriteBlocking</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4d]">ADC1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[59]">ADC_ETC_ERROR_IRQ_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[55]">ADC_ETC_IRQ0_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[56]">ADC_ETC_IRQ1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[57]">ADC_ETC_IRQ2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[58]">ADC_ETC_IRQ3_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[34]">CCM_1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[35]">CCM_2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[7e]">CLOCK_DisableClock</a> from clock_config.o(.text.CLOCK_DisableClock) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[80]">CLOCK_InitSysPfd</a> from fsl_clock.o(.text.CLOCK_InitSysPfd) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[7d]">CLOCK_SetDiv</a> from clock_config.o(.text.CLOCK_SetDiv) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[7f]">CLOCK_SetMux</a> from clock_config.o(.text.CLOCK_SetMux) referenced from clock_config.o(.text.BOARD_BootClockRUN)
 <LI><a href="#[1d]">CORE_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3b]">CSU_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[1b]">CTI0_ERROR_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[1c]">CTI1_ERROR_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[4f]">DCDC_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3c]">DCP_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3d]">DCP_VMI_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[5e]">DMA0_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[a]">DMA0_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[68]">DMA10_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[14]">DMA10_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[69]">DMA11_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[15]">DMA11_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6a]">DMA12_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[16]">DMA12_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6b]">DMA13_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[17]">DMA13_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6c]">DMA14_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[18]">DMA14_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6d]">DMA15_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[19]">DMA15_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[5f]">DMA1_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[b]">DMA1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[60]">DMA2_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[c]">DMA2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[61]">DMA3_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[d]">DMA3_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[62]">DMA4_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[e]">DMA4_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[63]">DMA5_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[f]">DMA5_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[64]">DMA6_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[10]">DMA6_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[65]">DMA7_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[11]">DMA7_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[66]">DMA8_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[12]">DMA8_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[67]">DMA9_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[13]">DMA9_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6e]">DMA_ERROR_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[1a]">DMA_ERROR_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[5a]">DefaultISR</a> from startup_mimxrt1011.o(.text) referenced from fsl_lpuart.o(.data.s_lpuartIsr)
 <LI><a href="#[5a]">DefaultISR</a> from startup_mimxrt1011.o(.text) referenced 159 times from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[36]">EWM_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[7c]">FLEXIO1_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[4e]">FLEXIO1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[25]">FLEXRAM_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[73]">FLEXSPI_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[24]">FLEXSPI_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[4c]">GPC_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[50]">GPIO1_Combined_0_15_IRQHandler</a> from sai_interrupt_record_playback.o(.text.GPIO1_Combined_0_15_IRQHandler) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[51]">GPIO1_Combined_16_31_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[52]">GPIO2_Combined_0_15_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[53]">GPIO5_Combined_0_15_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[83]">GPIO_PinInit</a> from fsl_gpio.o(.text.GPIO_PinInit) referenced from sai_interrupt_record_playback.o(.text.main)
 <LI><a href="#[33]">GPR_IRQ_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[28]">GPT1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[29]">GPT2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[81]">HAL_UartReceiveBlocking</a> from fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) referenced from fsl_debug_console.o(.text.DbgConsole_Init)
 <LI><a href="#[82]">HAL_UartSendBlocking</a> from fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) referenced from fsl_debug_console.o(.text.DbgConsole_Init)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[84]">I2C_writedata</a> from sai_interrupt_record_playback.o(.text.I2C_writedata) referenced from sai_interrupt_record_playback.o(.text.main)
 <LI><a href="#[31]">KPP_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[74]">LPI2C1_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C1_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[26]">LPI2C1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[75]">LPI2C2_DriverIRQHandler</a> from fsl_lpi2c.o(.text.LPI2C2_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[27]">LPI2C2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[76]">LPSPI1_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[2a]">LPSPI1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[77]">LPSPI2_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[2b]">LPSPI2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6f]">LPUART1_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[1e]">LPUART1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[70]">LPUART2_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[1f]">LPUART2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[71]">LPUART3_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[20]">LPUART3_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[72]">LPUART4_DriverIRQHandler</a> from fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[21]">LPUART4_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[22]">PIT_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[47]">PMU_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[2c]">PWM1_0_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[2d]">PWM1_1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[2e]">PWM1_2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[2f]">PWM1_3_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[30]">PWM1_FAULT_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[43]">RTWDOG_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3e]">Reserved68_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[40]">Reserved70_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[41]">Reserved71_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[78]">SAI1_DriverIRQHandler</a> from fsl_sai.o(.text.SAI1_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[42]">SAI1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[79]">SAI3_RX_DriverIRQHandler</a> from fsl_sai.o(.text.SAI3_RX_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[44]">SAI3_RX_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[7a]">SAI3_TX_DriverIRQHandler</a> from fsl_sai.o(.text.SAI3_TX_DriverIRQHandler) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[45]">SAI3_TX_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[38]">SNVS_HP_WRAPPER_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[39]">SNVS_HP_WRAPPER_TZ_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3a]">SNVS_LP_WRAPPER_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[7b]">SPDIF_DriverIRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[46]">SPDIF_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[32]">SRC_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[5c]">SystemInit</a> from system_mimxrt1011.o(.text.SystemInit) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[49]">TEMP_LOW_HIGH_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[4a]">TEMP_PANIC_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[3f]">TRNG_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[23]">USB_OTG1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[4b]">USB_PHY_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[54]">WDOG1_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[37]">WDOG2_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[48]">XBAR1_IRQ_0_1_2_3_IRQHandler</a> from startup_mimxrt1011.o(.text) referenced from startup_mimxrt1011.o(.isr_vector)
 <LI><a href="#[5d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mimxrt1011.o(.text)
 <LI><a href="#[5b]">main</a> from sai_interrupt_record_playback.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[85]">tx_callback</a> from sai_interrupt_record_playback.o(.text.tx_callback) referenced from sai_interrupt_record_playback.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4d]"></a>ADC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[59]"></a>ADC_ETC_ERROR_IRQ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[55]"></a>ADC_ETC_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[56]"></a>ADC_ETC_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[57]"></a>ADC_ETC_IRQ2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[58]"></a>ADC_ETC_IRQ3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[34]"></a>CCM_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[35]"></a>CCM_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1d]"></a>CORE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3b]"></a>CSU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1b]"></a>CTI0_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c]"></a>CTI1_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4f]"></a>DCDC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3c]"></a>DCP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3d]"></a>DCP_VMI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[5e]"></a>DMA0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>DMA10_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>DMA11_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>DMA12_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>DMA13_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>DMA14_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>DMA15_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>DMA1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>DMA3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>DMA4_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>DMA5_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>DMA6_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>DMA7_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>DMA8_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>DMA9_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>DMA_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[5a]"></a>DefaultISR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> fsl_lpuart.o(.data.s_lpuartIsr)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[36]"></a>EWM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[7c]"></a>FLEXIO1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>FLEXRAM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[73]"></a>FLEXSPI_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>GPC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[51]"></a>GPIO1_Combined_16_31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[52]"></a>GPIO2_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[53]"></a>GPIO5_Combined_0_15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[33]"></a>GPR_IRQ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[28]"></a>GPT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[29]"></a>GPT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[31]"></a>KPP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[76]"></a>LPSPI1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>LPSPI2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[22]"></a>PIT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[47]"></a>PMU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2c]"></a>PWM1_0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2d]"></a>PWM1_1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2e]"></a>PWM1_2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2f]"></a>PWM1_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[30]"></a>PWM1_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[43]"></a>RTWDOG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3e]"></a>Reserved68_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[40]"></a>Reserved70_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[41]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[38]"></a>SNVS_HP_WRAPPER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[39]"></a>SNVS_HP_WRAPPER_TZ_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3a]"></a>SNVS_LP_WRAPPER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[7b]"></a>SPDIF_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>SRC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[49]"></a>TEMP_LOW_HIGH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4a]"></a>TEMP_PANIC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[3f]"></a>TRNG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[23]"></a>USB_OTG1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4b]"></a>USB_PHY_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[54]"></a>WDOG1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[37]"></a>WDOG2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[48]"></a>XBAR1_IRQ_0_1_2_3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1011.o(.text)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1011.o(.text)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1011.o(.text)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1011.o(.text)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1011.o(.text)
<LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[a]"></a>DMA0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[b]"></a>DMA1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[c]"></a>DMA2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[d]"></a>DMA3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[e]"></a>DMA4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[f]"></a>DMA5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[10]"></a>DMA6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[11]"></a>DMA7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[12]"></a>DMA8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[13]"></a>DMA9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[14]"></a>DMA10_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[15]"></a>DMA11_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[16]"></a>DMA12_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[17]"></a>DMA13_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[18]"></a>DMA14_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[19]"></a>DMA15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1e]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[1f]"></a>LPUART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[20]"></a>LPUART3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[21]"></a>LPUART4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[24]"></a>FLEXSPI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[26]"></a>LPI2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[27]"></a>LPI2C2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2a]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[2b]"></a>LPSPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[42]"></a>SAI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[44]"></a>SAI3_RX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[45]"></a>SAI3_TX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[46]"></a>SPDIF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[4e]"></a>FLEXIO1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1011.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[88]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, uldiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>

<P><STRONG><a name="[b9]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8d]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_GetCommonConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
</UL>

<P><STRONG><a name="[ba]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[87]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8f]"></a>BOARD_BootClockRUN</STRONG> (Thumb, 664 bytes, Stack size 0 bytes, clock_config.o(.text.BOARD_BootClockRUN))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitAudioPll
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSysPll
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitEnetPll
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SwitchOsc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitRcOsc24M
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitExternalClk
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
</UL>

<P><STRONG><a name="[96]"></a>BOARD_ConfigMPU</STRONG> (Thumb, 480 bytes, Stack size 0 bytes, board.o(.text.BOARD_ConfigMPU))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>BOARD_DebugConsoleSrcFreq</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, board.o(.text.BOARD_DebugConsoleSrcFreq))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[9c]"></a>BOARD_InitBootClocks</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clock_config.o(.text.BOARD_InitBootClocks))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>BOARD_InitBootPins</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitBootPins))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, board.o(.text.BOARD_InitDebugConsole))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>BOARD_InitPins</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitPins))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
</UL>

<P><STRONG><a name="[95]"></a>CLOCK_DeinitAudioPll</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_DeinitAudioPll))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[a6]"></a>CLOCK_GetCoreFreq</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetCoreFreq))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[aa]"></a>CLOCK_GetFreq</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetFreq))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPerClkFreq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllUsb1SWFreq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>CLOCK_GetIpgFreq</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetIpgFreq))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPerClkFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[ac]"></a>CLOCK_GetPerClkFreq</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetPerClkFreq))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetIpgFreq
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[9b]"></a>CLOCK_GetPllFreq</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetPllFreq))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllUsb1SWFreq
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[a8]"></a>CLOCK_GetSysPfdFreq</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetSysPfdFreq))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[a7]"></a>CLOCK_GetUsb1PfdFreq</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetUsb1PfdFreq))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[ff]"></a>CLOCK_InitAudioPll</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitAudioPll))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>CLOCK_InitEnetPll</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitEnetPll))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[90]"></a>CLOCK_InitExternalClk</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitExternalClk))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[91]"></a>CLOCK_InitRcOsc24M</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitRcOsc24M))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[80]"></a>CLOCK_InitSysPfd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitSysPfd))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[94]"></a>CLOCK_InitSysPll</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_InitSysPll))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[92]"></a>CLOCK_SwitchOsc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SwitchOsc))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[a0]"></a>DbgConsole_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_Init))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[b4]"></a>DbgConsole_Printf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_Printf))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>DbgConsole_Putchar</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_Putchar))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_PrintfPaddingCharacter
</UL>

<P><STRONG><a name="[b5]"></a>DbgConsole_Vprintf</STRONG> (Thumb, 536 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_Vprintf))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Putchar
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_PrintfPaddingCharacter
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_ConvertRadixNumToString
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[50]"></a>GPIO1_Combined_0_15_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.GPIO1_Combined_0_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.isr_vector)
</UL>
<P><STRONG><a name="[83]"></a>GPIO_PinInit</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_PinInit))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSetInterruptConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sai_interrupt_record_playback.o(.text.main)
</UL>
<P><STRONG><a name="[bb]"></a>GPIO_PinSetInterruptConfig</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_PinSetInterruptConfig))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[b3]"></a>HAL_UartInit</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fsl_adapter_lpuart.o(.text.HAL_UartInit))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[81]"></a>HAL_UartReceiveBlocking</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(.text.DbgConsole_Init)
</UL>
<P><STRONG><a name="[82]"></a>HAL_UartSendBlocking</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(.text.DbgConsole_Init)
</UL>
<P><STRONG><a name="[84]"></a>I2C_writedata</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.I2C_writedata))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStart
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sai_interrupt_record_playback.o(.text.main)
</UL>
<P><STRONG><a name="[74]"></a>LPI2C1_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C1_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>LPI2C2_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C2_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>LPI2C_GetInstance</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[cd]"></a>LPI2C_MasterCheckAndClearError</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterCheckAndClearError))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
</UL>

<P><STRONG><a name="[c5]"></a>LPI2C_MasterGetDefaultConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterGetDefaultConfig))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>LPI2C_MasterInit</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterInit))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSetBaudRate
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetInstance
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetCyclesForWidth
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>LPI2C_MasterSend</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterSend))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_writedata
</UL>

<P><STRONG><a name="[c9]"></a>LPI2C_MasterSetBaudRate</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterSetBaudRate))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[c0]"></a>LPI2C_MasterStart</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterStart))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_writedata
</UL>

<P><STRONG><a name="[cc]"></a>LPI2C_MasterStop</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterStop))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterWaitForTxReady
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[c4]"></a>LPI2C_SlaveTransferHandleIRQ</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_SlaveTransferHandleIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveCheckAndClearError
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>LPUART1_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART1_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>LPUART2_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART2_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>LPUART3_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART3_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>LPUART4_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART4_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>LPUART_ClearStatusFlags</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_ClearStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
</UL>

<P><STRONG><a name="[bc]"></a>LPUART_GetDefaultConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_GetDefaultConfig))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[d1]"></a>LPUART_GetInstance</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[bd]"></a>LPUART_Init</STRONG> (Thumb, 476 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_Init))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetInstance
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[be]"></a>LPUART_ReadBlocking</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_ReadBlocking))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartReceiveBlocking
</UL>

<P><STRONG><a name="[bf]"></a>LPUART_WriteBlocking</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.LPUART_WriteBlocking))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartSendBlocking
</UL>

<P><STRONG><a name="[78]"></a>SAI1_DriverIRQHandler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI1_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>SAI3_RX_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI3_RX_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>SAI3_TX_DriverIRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI3_TX_DriverIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>SAI_GetClassicI2SConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_GetClassicI2SConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>SAI_Init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_Init))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>SAI_TransferAbortReceive</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferAbortReceive))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
</UL>

<P><STRONG><a name="[de]"></a>SAI_TransferAbortSend</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferAbortSend))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[d7]"></a>SAI_TransferRxHandleIRQ</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferRxHandleIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortReceive
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_ReadNonBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_RX_DriverIRQHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_DriverIRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>SAI_TransferSendNonBlocking</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferSendNonBlocking))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxEnable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>SAI_TransferTxCreateHandle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferTxCreateHandle))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableIRQ
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>SAI_TransferTxHandleIRQ</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferTxHandleIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortSend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_WriteNonBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI3_TX_DriverIRQHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_DriverIRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>SAI_TransferTxSetConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TransferTxSetConfig))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>SAI_TxEnable</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxEnable))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferSendNonBlocking
</UL>

<P><STRONG><a name="[f6]"></a>SAI_TxReset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxReset))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[103]"></a>SAI_TxSetBitClockRate</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetBitClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>SAI_TxSetBitclockConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetBitclockConfig))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[f1]"></a>SAI_TxSetConfig</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetConfig))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetSerialDataConfig
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetFrameSyncConfig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetFifoConfig
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetBitclockConfig
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxReset
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxSetConfig
</UL>

<P><STRONG><a name="[fc]"></a>SAI_TxSetFifoConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetFifoConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[fb]"></a>SAI_TxSetFrameSyncConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetFrameSyncConfig))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[fa]"></a>SAI_TxSetSerialDataConfig</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_TxSetSerialDataConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[5c]"></a>SystemInit</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, system_mimxrt1011.o(.text.SystemInit))
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1011.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>SystemInitHook</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, board.o(.text.SystemInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 516 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.main))
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferSendNonBlocking
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetBitClockRate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxSetConfig
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_GetClassicI2SConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxCreateHandle
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitAudioPll
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootClocks
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitBootPins
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c2]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_writedata
</UL>

<P><STRONG><a name="[100]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>tx_callback</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sai_interrupt_record_playback.o(.text.tx_callback))
<BR>[Address Reference Count : 1]<UL><LI> sai_interrupt_record_playback.o(.text.main)
</UL>
<P><STRONG><a name="[97]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, board.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[98]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, board.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[99]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, board.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>

<P><STRONG><a name="[7d]"></a>CLOCK_SetDiv</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clock_config.o(.text.CLOCK_SetDiv))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[7e]"></a>CLOCK_DisableClock</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, clock_config.o(.text.CLOCK_DisableClock))
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[7f]"></a>CLOCK_SetMux</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clock_config.o(.text.CLOCK_SetMux))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock_config.o(.text.BOARD_BootClockRUN)
</UL>
<P><STRONG><a name="[b2]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock_config.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetMux
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>

<P><STRONG><a name="[a2]"></a>CLOCK_EnableClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.CLOCK_EnableClock))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[c8]"></a>LPI2C_GetCyclesForWidth</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_GetCyclesForWidth))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[ca]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetCyclesForWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[a3]"></a>CLOCK_ControlGate</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.CLOCK_ControlGate))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[cb]"></a>LPI2C_MasterWaitForTxReady</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_MasterWaitForTxReady))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStop
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSend
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterStart
</UL>

<P><STRONG><a name="[ce]"></a>LPI2C_SlaveCheckAndClearError</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_SlaveCheckAndClearError))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
</UL>

<P><STRONG><a name="[cf]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
</UL>

<P><STRONG><a name="[c3]"></a>LPI2C_CommonIRQHandler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, fsl_lpi2c.o(.text.LPI2C_CommonIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_SlaveTransferHandleIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C2_DriverIRQHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C1_DriverIRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPerClkFreq
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreFreq
</UL>

<P><STRONG><a name="[ad]"></a>CLOCK_GetPllUsb1SWFreq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetPllUsb1SWFreq))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[ae]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>

<P><STRONG><a name="[af]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
</UL>

<P><STRONG><a name="[b1]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSysPll
</UL>

<P><STRONG><a name="[a1]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_DeinitAudioPll
</UL>

<P><STRONG><a name="[b0]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_clock.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSysPfd
</UL>

<P><STRONG><a name="[db]"></a>SAI_GetInstance</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxCreateHandle
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Init
</UL>

<P><STRONG><a name="[a4]"></a>CLOCK_EnableClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_sai.o(.text.CLOCK_EnableClock))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Init
</UL>

<P><STRONG><a name="[f8]"></a>OUTLINED_FUNCTION_34</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_34))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[f9]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[a5]"></a>CLOCK_ControlGate</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_sai.o(.text.CLOCK_ControlGate))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>

<P><STRONG><a name="[f4]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetBitclockConfig
</UL>

<P><STRONG><a name="[f5]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetBitclockConfig
</UL>

<P><STRONG><a name="[fd]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetFrameSyncConfig
</UL>

<P><STRONG><a name="[f7]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TxSetConfig
</UL>

<P><STRONG><a name="[f0]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxSetConfig
</UL>

<P><STRONG><a name="[f2]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_23))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxSetConfig
</UL>

<P><STRONG><a name="[d9]"></a>SAI_GetCommonConfig</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_GetCommonConfig), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>

<P><STRONG><a name="[ee]"></a>SAI_WriteNonBlocking</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_WriteNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e3]"></a>SAI_ReadNonBlocking</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, fsl_sai.o(.text.SAI_ReadNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
</UL>

<P><STRONG><a name="[d6]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxCreateHandle
</UL>

<P><STRONG><a name="[ed]"></a>EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_sai.o(.text.EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxCreateHandle
</UL>

<P><STRONG><a name="[df]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e0]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e1]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e2]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e4]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e5]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[d5]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e6]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e7]"></a>OUTLINED_FUNCTION_31</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_31))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferRxHandleIRQ
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferTxHandleIRQ
</UL>

<P><STRONG><a name="[e9]"></a>OUTLINED_FUNCTION_35</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_35))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferSendNonBlocking
</UL>

<P><STRONG><a name="[ea]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferSendNonBlocking
</UL>

<P><STRONG><a name="[d4]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortReceive
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortSend
</UL>

<P><STRONG><a name="[dd]"></a>OUTLINED_FUNCTION_28</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fsl_sai.o(.text.OUTLINED_FUNCTION_28))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortReceive
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_TransferAbortSend
</UL>

<P><STRONG><a name="[d2]"></a>CLOCK_ControlGate</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.CLOCK_ControlGate))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[d0]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_lpuart.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART4_DriverIRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART3_DriverIRQHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART2_DriverIRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_DriverIRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>DbgConsole_ConvertRadixNumToString</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_ConvertRadixNumToString))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>

<P><STRONG><a name="[b6]"></a>DbgConsole_PrintfPaddingCharacter</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fsl_debug_console.o(.text.DbgConsole_PrintfPaddingCharacter))
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
