
1.  减法运算  （使用补码）

运算 8 - 1，在计算机并不是用8减去7，而是用8 + (-7)，
 
-1的补数是256-1=255；这就好比是"0-1"不够减，"借0x100"得到的。   //本计算只用于理解，不能用于程序设计



===================原码，反码，补码的理解============================


原码：+|x|  或者  -|x|      (就是符号位0/1 加上真值的绝对值)
例如：
+1 的原码：0000 0001
-1  的原码：1000 0001

8位二进制表示的范围是：[1111 1111, 0111 1111] 即 [-127, +127].


反码：正数的反码=原码，负数的反码=符号位不变+其余每一位按位取反。

例如：
+1 的原码：0000 0001   +1 的反码：0000 0001
-1  的原码：1000 0001   -1  的反码：1111 1110

8位二进制表示的范围是 [1111 1111, 0111 1111] 即 [-127, +127].


补码：正数的补码=原码，负数的补码=反码+1

例如：

+1 的原码：0000 0001   +1 的反码：0000 0001    +1 的补码：0000 0001
-1  的原码：1000 0001   -1  的反码：1111 1110    -1  的补码：1111 1111

8位二进制表示的范围是 [0111 1111, 1000 000] 即 [-128, +127].




==================-128的二进制是多少==========================

8位二进制原码或二进制反码的表示范围为-127～+127，不能表示-128
而8位二进制补码的范围为-128～+127，所以可以表示-128。



====================原码与补码转换=============================

公式

原码 => 补码 = 反码 + 1 
补码 => 原码 = (补码 -1)取反码 = 补码的反码 + 1
补码的补码等于原码

eg:

-3
=10000011 原码
=11111100 反码
=11111101 补码
=11111100 补码-1
=10000011 (补码-1)取反码 == 原码

或者
=11111101 补码
=10000010 补码的反码
=10000011 补码的补码

补码的补码等于原码






