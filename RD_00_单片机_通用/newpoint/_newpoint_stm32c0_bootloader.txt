
1. 应用板子列表：
   板1：  官方小evk板  ，MCU芯片完整型号： stm32c011F6U6TR  (M0 32BIT 48M 20脚 32K ROM 6K RAM)

2. 最新固件软件和源程序： （本地）
    板1 firmware：   D:\stm32_bootload_test\OpenBootloader_test  （win10）
    板1 源程序：      同 firmware
 
3. 原理图
   板1： ：F:\_Awork_all\_Awork53_OMMO_COM_STM32\EVK-STM32C0116-DK\en.mb1684-c011f6-b01-schematic.pdf


4. 烧录 hex文件： 硬件烧录器，PC烧录软件，烧录固件文件，烧录过程 （板1 stm32c011） 

   。硬件烧录工具： 官方evk内置 st link     

   。烧录软件1： PC烧录软件， STM32 ST-LINK Utility
   。烧录软件1下载： https://www.st.com/en/development-tools/stm32cubeprog.html
   。烧录软件2： cubeide开发环境中的工具链烧录 （ 调用 STM32 ST-LINK Utility）
 
   。烧录固件文件： 略
   。烧录过程：   略  （3种方法都很简单） 

   烧录注意点：
   。 cubeide里面需要先设置好工具链 （详见下面： “7. stm32cubeide使用详解”）
 
5. MCU芯片数据手册和参考手册 
    。工程\datasheet\stm32c011d6.pdf                                //STM32C01数据手册
    。工程\datasheet\RM0490-DM00781702_C0x1.pdf           //STM32C01参考手册  （寄存器说明）
 
6. 开发环境，下载地址
   。开发环境1： CUBEIDE    
   。开发环境下载地址： stm32官网
      https://www.st.com/en/development-tools/stm32cubeide.html
      https://www.stmcu.com.cn/ecosystem/Cube/Cube-introduction?utm_source=baidu&utm_medium=cpc&utm_campaign=STM32Cube&utm_term=stm32%20cubemx
  

7. stm32cubeide使用详解 

     1). STM32CUBEIDE内部调用STM32CUBEPROGRAMMER工具链，下面的设置可用  （其中带 -s 0x8000000 ，烧录后马上运行）
          C:\Program Files\STMicroelectronics\STM32Cube\STM32CubeProgrammer\bin\STM32_Programmer_CLI.exe

          ${workspace_loc:/prj1/Release}

          -c port=swd -w  prj1.elf #L
          -c port=swd -w  prj1.hex  -s 0x8000000 #L

    2). clubide生成hex文件
        右键project\属性\c/c++ Build \ Settings \ MCU Post build outputs 

8. evk开发板资料 stm32c011
    。evk资料：  F:\_Awork_all\_Awork53_OMMO_COM_STM32\EVK-STM32C0116-DK
    。下载地址： 略
    。evk原理图：F:\_Awork_all\_Awork53_OMMO_COM_STM32\EVK-STM32C0116-DK\en.mb1684-c011f6-b01-schematic.pdf


//10. 测试软件，测试过程

   。PC测试软件：  ?

  。测试过程：  

         .硬件连接1： 板1  -- typeC  -- 电脑
         .硬件连接2： 板1  -- 耳机孔  -- ？   -- ？   -- ？  

         .  运行 CNCTestApplication.exe
         .  在Port处，选择com串口号 ，点击 open            
         .   （待续）
         .   
 


11.  串口（官方内置ISP）烧录的基本操作：

      初始值： BOOT LOCK =0, nBOOT_SEL=1, nBOOT0=1, nBOOT1 =1 （因nBOOT_SEL为1，启动类型完全由熔丝位决定，可忽略BOOT0引脚）

      1). 运行 stm32cubeprog的pc烧录软件   
      2). 用STLINK方式连接烧录器，把熔丝位nBoot0设置改为0（切换到可uart烧录，也可stlink烧录），Apply （会跳出提示框programmed 成功）
      3). 断开stlink， 按reset键，用uart方式连接烧录器（如未找到com端口，则在右边刷新按钮上点一下），
      4). 用串口下载hex文件
      5). 再用stlink方式连接，把熔丝位nBoot0改回1（不能uart烧录，只能stlink，jink烧录），回到原始设置  （这样后NRST和uart的功能就正常了）
      6). 串口方式每次连接烧录前，最好都要按一下NRST按键



=============HR2=============================
 
转bootloader： 

	outpw(&SYS->RSTSRC, 3);//clear bit
	outpw(&FMC->ISPCON, (inpw(&FMC->ISPCON) & 0xFFFFFFFC) |0x2);
	outpw(&SCB->AIRCR, (0x05FA0000UL | 0x00000004UL));//SYSRESETREQ


转主flash：


	outpw(&SYS->RSTSRC, 3);  //clear bit
	outpw(&FMC->ISPCON, inpw(&FMC->ISPCON) & 0xFFFFFFFC);
	outpw(&SCB->AIRCR, (0x05FA0000UL | 0x00000004UL));  //SYSRESETREQ






=====================其他=============================

 其他特定工具 （如eq设置工具）

ISP下载的理解： 
   STM32在出厂时，由ST在这个区域内部预置了一段BootLoader， 也就是我们常说的ISP程序， 这是一块ROM，出厂后无法修改

 